# workflow의 이름
name: CI

# 해당 workflow가 언제 실행될 것인지에 대한 트리거를 지정
on:
  push:
    branches: [ main ] # main branch로 push 될 때 실행됩니다.
  pull_request:
    branches: [ main ]  # main branch로 pull request될 때 실행됩니다.

# workflow는 한개 이상의 job을 가지며, 각 job은 여러 step에 따라 단계를 나눌 수 있습니다.
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      # Docker Compose 파일에서 사용할 서비스 정의
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.16.2
        ports:
          - 9200:9200
        options: >-
          --health-cmd="curl --silent --fail localhost:9200/_cluster/health || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      steps:
        # Docker Compose 설치
        - name: Install Docker Compose
          run: |
            sudo apt-get update
            sudo apt-get -y install docker-compose

        # MySQL에 데이터베이스와 데이터 추가
        - name: Add data to MySQL
          run: |
            sudo docker exec -i $(sudo docker ps -q -f name=mysql) sh -c 'exec mysql -uroot -proot testdb' < ./testdb.sql
          working-directory: ./

        # Elasticsearch 상태 확인
        - name: Check Elasticsearch
          run: |
            curl --silent --fail localhost:9200/_cluster/health || exit 1

        # MySQL 상태 확인
        - name: Check MySQL
          run: |
            sudo docker exec -i $(sudo docker ps -q -f name=mysql) mysqladmin ping --silent || exit 1
  build:
    name: CI
    # 해당 jobs에서 아래의 steps들이 어떠한 환경에서 실행될 것인지를 지정합니다.
    runs-on: ubuntu-latest

    steps:
     # 작업에서 액세스할 수 있도록 $GITHUB_WORKSPACE에서 저장소를 체크아웃합니다.
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Download MySQL Docker image
        run: docker pull mysql

      - name: Start MySQL with Docker
        run:
      
      - name: Create application.yml
        run: |
          mkdir ./src/main/resources
          touch ./src/main/resources/application.yml
          echo "${{ secrets.APPLICATION_YML }}" >> ./src/main/resources/application.yml   

      - name: Create application-dev.yml
        run: |
          touch ./src/main/resources/application-dev.yml
          echo "${{ secrets.APPLICATION_DEV_YML }}" >> ./src/main/resources/application-dev.yml

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash
      
      - name: Build with Gradle
        run: ./gradlew build
        shell: bash
